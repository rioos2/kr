fn char_or_space(s: &str, idx: usize) -> u8 {
    let bytes = s.as_bytes();
    if bytes.len() <= idx {
        return ' ' as u8;
    }
    bytes[idx] as u8
}

pub fn str_to_char16(s: &str) -> [u8; 16usize] {
    [char_or_space(s, 0),
     char_or_space(s, 1),
     char_or_space(s, 2),
     char_or_space(s, 3),
     char_or_space(s, 4),
     char_or_space(s, 5),
     char_or_space(s, 6),
     char_or_space(s, 7),
     char_or_space(s, 8),
     char_or_space(s, 9),
     char_or_space(s, 10),
     char_or_space(s, 11),
     char_or_space(s, 12),
     char_or_space(s, 13),
     char_or_space(s, 14),
     char_or_space(s, 15)]
}

pub fn str_to_char32(s: &str) -> [u8; 32usize] {
    [char_or_space(s, 0),
     char_or_space(s, 1),
     char_or_space(s, 2),
     char_or_space(s, 3),
     char_or_space(s, 4),
     char_or_space(s, 5),
     char_or_space(s, 6),
     char_or_space(s, 7),
     char_or_space(s, 8),
     char_or_space(s, 9),
     char_or_space(s, 10),
     char_or_space(s, 11),
     char_or_space(s, 12),
     char_or_space(s, 13),
     char_or_space(s, 14),
     char_or_space(s, 15),
     char_or_space(s, 16),
     char_or_space(s, 17),
     char_or_space(s, 18),
     char_or_space(s, 19),
     char_or_space(s, 20),
     char_or_space(s, 21),
     char_or_space(s, 22),
     char_or_space(s, 23),
     char_or_space(s, 24),
     char_or_space(s, 25),
     char_or_space(s, 26),
     char_or_space(s, 27),
     char_or_space(s, 28),
     char_or_space(s, 29),
     char_or_space(s, 30),
     char_or_space(s, 31)]
}

pub fn str_to_char64(s: &str) -> [u8; 64usize] {
    [char_or_space(s, 0),
     char_or_space(s, 1),
     char_or_space(s, 2),
     char_or_space(s, 3),
     char_or_space(s, 4),
     char_or_space(s, 5),
     char_or_space(s, 6),
     char_or_space(s, 7),
     char_or_space(s, 8),
     char_or_space(s, 9),
     char_or_space(s, 10),
     char_or_space(s, 11),
     char_or_space(s, 12),
     char_or_space(s, 13),
     char_or_space(s, 14),
     char_or_space(s, 15),
     char_or_space(s, 16),
     char_or_space(s, 17),
     char_or_space(s, 18),
     char_or_space(s, 19),
     char_or_space(s, 20),
     char_or_space(s, 21),
     char_or_space(s, 22),
     char_or_space(s, 23),
     char_or_space(s, 24),
     char_or_space(s, 25),
     char_or_space(s, 26),
     char_or_space(s, 27),
     char_or_space(s, 28),
     char_or_space(s, 29),
     char_or_space(s, 30),
     char_or_space(s, 31),
     char_or_space(s, 32),
     char_or_space(s, 33),
     char_or_space(s, 34),
     char_or_space(s, 35),
     char_or_space(s, 36),
     char_or_space(s, 37),
     char_or_space(s, 38),
     char_or_space(s, 39),
     char_or_space(s, 40),
     char_or_space(s, 41),
     char_or_space(s, 42),
     char_or_space(s, 43),
     char_or_space(s, 44),
     char_or_space(s, 45),
     char_or_space(s, 46),
     char_or_space(s, 47),
     char_or_space(s, 48),
     char_or_space(s, 49),
     char_or_space(s, 50),
     char_or_space(s, 51),
     char_or_space(s, 52),
     char_or_space(s, 53),
     char_or_space(s, 54),
     char_or_space(s, 55),
     char_or_space(s, 56),
     char_or_space(s, 57),
     char_or_space(s, 58),
     char_or_space(s, 59),
     char_or_space(s, 60),
     char_or_space(s, 61),
     char_or_space(s, 62),
     char_or_space(s, 63)]
}
